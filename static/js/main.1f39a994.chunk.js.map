{
  "version": 3,
  "sources": [
    "Components/Time.jsx",
    "Components/forms.jsx",
    "Components/LinePage.jsx",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "Timer",
    "props",
    "useState",
    "ActiveNumber",
    "activesetNumber",
    "Number",
    "setNumber",
    "StorageNumber",
    "setStorageNumber",
    "Second",
    "setSecond",
    "CountStart",
    "setCountStart",
    "ButtonClicked",
    "setButtonClicked",
    "ActiveSecond",
    "setActiveSecond",
    "Background",
    "setBackground",
    "StopCounter",
    "setStopCounter",
    "StartBreak",
    "setStartBreak",
    "isLongBreak",
    "setislongbreak",
    "isShortBreak",
    "setÄ±sshortbreak",
    "isFinish",
    "setisFinished",
    "DataOfPomodoro",
    "setDataOfPomodoro",
    "useEffect",
    "dataofpomodoro",
    "session",
    "secondtimer",
    "setTimeout",
    "activesecond",
    "clearTimeout",
    "number",
    "convert",
    "parseFloat",
    "toFixed",
    "shortbreak",
    "longbreak",
    "newdata",
    "item",
    "newnumber",
    "alert",
    "window",
    "confirm",
    "location",
    "reload",
    "length",
    "className",
    "data-aos",
    "data-aos-duration",
    "Card",
    "style",
    "border",
    "boxShadow",
    "CardContent",
    "Input",
    "visibility",
    "type",
    "onChange",
    "event",
    "res",
    "target",
    "value",
    "replace",
    "convertnumber",
    "margin",
    "CardActions",
    "textAlign",
    "justifyContent",
    "alignItems",
    "Button",
    "disabled",
    "onClick",
    "LineForm",
    "isnext",
    "setIsnext",
    "CreateForm",
    "setCreateForm",
    "CreateTimer",
    "setCreateTimer",
    "open",
    "setOpen",
    "FrontSide",
    "setFrontSide",
    "handleForm",
    "preventDefault",
    "data",
    "FormData",
    "res1",
    "get",
    "res2",
    "convertnumber2",
    "parseInt",
    "handleOpen",
    "handleClose",
    "Createformfunction",
    "method",
    "onSubmit",
    "FormControl",
    "flexWrap",
    "flexDirection",
    "display",
    "marginRight",
    "marginTop",
    "color",
    "marginLeft",
    "fontWeight",
    "borderRadius",
    "name",
    "min",
    "inputProps",
    "max",
    "step",
    "placeholder",
    "required",
    "variant",
    "background",
    "fontSize",
    "zIndex",
    "position",
    "padding",
    "href",
    "maxWidth",
    "maxHeight",
    "AOS",
    "init",
    "Fragment",
    "map",
    "Element",
    "index",
    "key",
    "LinePage",
    "App",
    "path",
    "Boolean",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister",
    "catch",
    "error",
    "console",
    "message"
  ],
  "mappings": "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",
  "file": "static/js/main.1f39a994.chunk.js",
  "sourcesContent": [
    "import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Input,\n  CardActions,\n} from \"@material-ui/core\";\nfunction Timer(props) {\n  const [ActiveNumber, activesetNumber] = useState([]);\n  const [Number, setNumber] = useState([]);\n  const [StorageNumber, setStorageNumber] = useState([]);\n  const [Second, setSecond] = useState([]);\n  const [CountStart, setCountStart] = useState(true);\n  const [ButtonClicked, setButtonClicked] = useState(false);\n  const [ActiveSecond, setActiveSecond] = useState(60);\n  const [Background, setBackground] = useState(\"bg1\");\n  const [StopCounter, setStopCounter] = useState(0);\n  const [StartBreak, setStartBreak] = useState(true);\n  const [isLongBreak, setislongbreak] = useState(false);\n  const [isShortBreak, setÄ±sshortbreak] = useState(false);\n  const [isFinish, setisFinished] = useState(false);\n  const [DataOfPomodoro, setDataOfPomodoro] = useState([{}]);\n  const gettime = (event) => {\n    const inputvalue = event.target.value;\n\n    var res = inputvalue.replace(\":\", \".\");\n\n    let convertnumber = parseFloat(res).toFixed(2);\n    if (convertnumber == 0.0) {\n    } else {\n      activesetNumber(convertnumber);\n    }\n  };\n  useEffect(() => {\n    setDataOfPomodoro(props.dataofpomodoro);\n  }, []);\n  useEffect(() => {\n    if (ActiveNumber == \"NaN\") {\n      activesetNumber([]);\n    }\n  }, [ActiveNumber]);\n\n  useEffect(() => {\n    if (ButtonClicked) {\n      if (CountStart && DataOfPomodoro[0].session != -3) {\n        const secondtimer = setTimeout(() => {\n          if (CountStart) {\n            let activesecond = Second;\n            activesecond -= 1;\n            setSecond(activesecond);\n          }\n        }, 1000);\n        return () => clearTimeout(secondtimer);\n      } else {\n        const secondtimer = setTimeout(() => {\n          if (CountStart) {\n            setSecond(0);\n            setNumber([]);\n          }\n        }, 500);\n        return () => clearTimeout(secondtimer);\n      }\n    }\n  }, [Second]);\n\n  useEffect(() => {\n    let number = Number;\n    if (0.6 < Number % 1) {\n      number -= 0.4;\n      let convert = parseFloat(number).toFixed(2);\n      setNumber(convert);\n    }\n    if (Second === 0) {\n      setSecond(60);\n\n      if (number == 0.01) {\n        if (\n          StartBreak &&\n          props.dataofpomodoro[0].session / 2.0 != DataOfPomodoro[0].session\n        ) {\n          setTimeout(() => {\n            setNumber(DataOfPomodoro[0].shortbreak);\n            setBackground(\"bg4\");\n            setÄ±sshortbreak(true);\n            setislongbreak(false);\n            setSecond(60);\n            setStartBreak(false);\n          }, 5);\n        } else if (\n          StartBreak &&\n          props.dataofpomodoro[0].session / 2.0 == DataOfPomodoro[0].session\n        ) {\n          setTimeout(() => {\n            setNumber(DataOfPomodoro[0].longbreak);\n            setBackground(\"bg4\");\n            setÄ±sshortbreak(false);\n            setislongbreak(true);\n            setSecond(60);\n            setStartBreak(false);\n          }, 5);\n        } else {\n          setNumber(StorageNumber);\n          setSecond(60);\n          setStartBreak(true);\n        }\n\n        const newdata = [...DataOfPomodoro];\n        let item = { ...newdata[0] };\n        const value = newdata[0].session;\n        const newnumber = value - 1;\n        item.session = newnumber;\n        newdata[0] = item;\n        setDataOfPomodoro([item]);\n        if (newdata[0].session === -3) {\n          setisFinished(true);\n          setNumber([]);\n          setSecond([]);\n          setActiveSecond([]);\n          alert(\"CONGRATULATIONS! \" + \"Your Stop Score:\" + StopCounter);\n          if (window.confirm) {\n            window.location.reload();\n            setNumber([]);\n            setSecond([]);\n          } else {\n            window.location.reload();\n            setNumber([]);\n            setSecond([]);\n            setActiveSecond([]);\n          }\n        }\n      } else {\n        let number = Number;\n        number -= 0.01;\n\n        let convert = parseFloat(number).toFixed(2);\n        setNumber(convert);\n      }\n    }\n  }, [Second]);\n  useEffect(() => {\n    if (Number.length == 0) {\n    } else {\n      if (\n        DataOfPomodoro[0].shortbreak / 2.0 == Number &&\n        !StartBreak &&\n        isShortBreak\n      ) {\n        setBackground(\"bg3\");\n      } else if (\n        DataOfPomodoro[0].longbreak / 2.0 == Number &&\n        !StartBreak &&\n        isLongBreak\n      ) {\n        setBackground(\"bg3\");\n      } else if (StorageNumber / 2.0 == Number && StartBreak) {\n        setBackground(\"bg3\");\n      } else if (StorageNumber == Number && StartBreak) {\n        setBackground(\"bg2\");\n      } else if (Number == 0.01 && isFinish) {\n        setNumber([]);\n        setSecond([]);\n        setBackground(\"bg4\");\n      } else {\n        setBackground(\"bg4\");\n      }\n    }\n  }, [Number, StartBreak, isLongBreak, isShortBreak]);\n  const StartCount = (event) => {\n    setBackground(\"bg2\");\n    setButtonClicked(true);\n    setCountStart(true);\n    setNumber(ActiveNumber);\n    setStorageNumber(ActiveNumber);\n    setSecond(ActiveSecond);\n    activesetNumber([]);\n  };\n  const StopCount = (event) => {\n    if (CountStart == true) {\n      let number = StopCounter;\n      setStopCounter((number += 1));\n      setCountStart(false);\n    }\n  };\n  const Continue = (event) => {\n    setCountStart(true);\n    let activesecond = Second;\n    activesecond -= 1;\n    setSecond(activesecond);\n  };\n\n  return (\n    <div className={\"myauto text-center \" + Background}>\n      <h1\n        data-aos={\"fade-right\"}\n        data-aos-duration=\"60000\"\n        className=\"text-muted\"\n      >\n        {!StartBreak ? \"...BREAK TIME...\" : \"...TIME TO WORK...\"}\n      </h1>\n\n      <Card\n        data-aos-duration=\"2000\"\n        data-aos={\"flip-down\"}\n        style={{ border: \"20px solid #F5FFFA\", boxShadow: \"5px 10px\" }}\n      >\n        <CardContent>\n          <small className=\"text-muted\">\n            {!ButtonClicked ? \"SET YOUR TIME TO WORK (HOUR-MINUTE)\" : \"\"}\n          </small>\n\n          <hr />\n          <h1 className=\"h1\">{ButtonClicked ? Number : ActiveNumber}</h1>\n\n          <p>{Second}</p>\n\n          <Input\n            style={{ visibility: \"visible\" }}\n            type=\"time\"\n            onChange={gettime}\n            style={{ margin: \"5px\" }}\n          />\n          <hr />\n          <CardActions\n            style={{\n              textAlign: \"center\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: 0,\n            }}\n          >\n            <Button\n              style={{ textAlign: \"center\" }}\n              disabled={ActiveNumber.length == 0}\n              onClick={StartCount}\n            >\n              Start\n            </Button>\n\n            <Button\n              disabled={\n                (Number.length == 0) |\n                (Number == 0) |\n                (ActiveNumber.length !== 0)\n              }\n              onClick={StopCount}\n            >\n              Stop\n            </Button>\n            <Button onClick={Continue} disabled={CountStart}>\n              Continue\n            </Button>\n            <hr />\n          </CardActions>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Timer;\n",
    "import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControl,\n  Input,\n} from \"@material-ui/core\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Timer from \"./Time\";\nconst LineForm = (props) => {\n  const [DataOfPomodoro, setDataOfPomodoro] = useState([{}]);\n  const [isnext, setIsnext] = useState(false);\n  const [CreateForm, setCreateForm] = useState([]);\n  const [CreateTimer, setCreateTimer] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [FrontSide, setFrontSide] = useState(true);\n  const handleForm = (event) => {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n    var res1 = data.get(\"shortbreak\").replace(\":\", \".\");\n\n    let convertnumber = parseFloat(res1).toFixed(2);\n\n    var res2 = data.get(\"longbreak\").replace(\":\", \".\");\n    let convertnumber2 = parseFloat(res2).toFixed(2);\n    if ((convertnumber == 0.0) | (convertnumber2 == 0.0)) {\n      alert(\"Short Break or Long Break cannot be 0.00  \");\n      if (window.confirm) {\n      } else {\n      }\n    } else if (convertnumber2 < convertnumber) {\n      alert(\"Short Break cannot be higher than Long Break \");\n      if (window.confirm) {\n      } else {\n      }\n    } else if (convertnumber == convertnumber2) {\n      alert(\"Short Break cannot be equal to Long Break \");\n      if (window.confirm) {\n      } else {\n      }\n    } else {\n      setDataOfPomodoro([\n        {\n          session: parseInt(data.get(\"session\")) * 4,\n          shortbreak: convertnumber,\n          longbreak: convertnumber2,\n        },\n      ]);\n      setCreateForm([]);\n      setIsnext(true);\n      setCreateTimer([Timer]);\n    }\n  };\n  const handleOpen = () => {\n    setOpen(true);\n    setFrontSide(false);\n  };\n\n  const handleClose = () => {\n    setFrontSide(true);\n  };\n\n  const Createformfunction = (props) => {\n    if (FrontSide) {\n      return (\n        <div className=\"myauto   text-center bgstart\">\n          <Card\n            data-aos-duration=\"2000\"\n            data-aos={open ? \"flip-left\" : \"zoom-in\"}\n            style={{\n              border: \"20px solid #F5FFFA\",\n              boxShadow: \"5px 10px\",\n            }}\n          >\n            <CardContent>\n              <h1 className=\"display-4 homeheadlines\">FLEX POMODORO</h1>\n              <hr />\n              <form className=\"\" method=\"post\" onSubmit={handleForm}>\n                <FormControl\n                  style={{\n                    flexWrap: \"column\",\n                    flexDirection: \"column\",\n                    display: \"flex\",\n                  }}\n                >\n                  <span style={{ marginRight: \"10px\", marginTop: \"6px\" }}>\n                    <span\n                      style={{\n                        border: \"1px  solid\",\n\n                        color: \"pink\",\n                      }}\n                    ></span>\n                    <small\n                      style={{\n                        marginLeft: \"5px\",\n                        textAlign: \"center\",\n                        color: \"pink\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Pomodoro Session 1-4\n                    </small>\n                    <span\n                      style={{\n                        color: \"pink\",\n                        marginLeft: \"5px\",\n                        border: \"1px solid\",\n                        borderRadius: \"50px\",\n                      }}\n                    ></span>\n                  </span>\n\n                  <Input\n                    name=\"session\"\n                    type=\"number\"\n                    min=\"4\"\n                    inputProps={{ min: \"1\", max: \"4\", step: \"1\" }}\n                    placeholder=\"Pomodoro session\"\n                    required\n                  />\n                  <span style={{ marginRight: \"10px\", marginTop: \"10px\" }}>\n                    <span\n                      style={{\n                        border: \"1px  solid\",\n\n                        color: \"pink\",\n                      }}\n                    ></span>\n                    <small\n                      style={{\n                        marginLeft: \"5px\",\n                        textAlign: \"center\",\n                        color: \"pink\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Short Break (HOUR-MINUTE)\n                    </small>\n                    <span\n                      style={{\n                        color: \"pink\",\n                        marginLeft: \"5px\",\n                        border: \"1px solid\",\n                        borderRadius: \"50px\",\n                      }}\n                    ></span>\n                  </span>\n\n                  <Input\n                    name=\"shortbreak\"\n                    type=\"time\"\n                    placeholder=\"shortbreak\"\n                    required\n                  />\n                  <span style={{ marginRight: \"10px\", marginTop: \"10px\" }}>\n                    <span\n                      style={{\n                        border: \"1px  solid\",\n\n                        color: \"pink\",\n                      }}\n                    ></span>\n                    <small\n                      style={{\n                        marginLeft: \"5px\",\n                        textAlign: \"center\",\n                        color: \"pink\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Long Break (HOUR-MINUTE)\n                    </small>\n                    <span\n                      style={{\n                        color: \"pink\",\n                        marginLeft: \"5px\",\n                        border: \"1px solid\",\n                        borderRadius: \"50px\",\n                      }}\n                    ></span>\n                  </span>\n\n                  <Input\n                    name=\"longbreak\"\n                    type=\"time\"\n                    placeholder=\"longbreak\"\n                    required\n                  />\n\n                  <CardActions>\n                    <div className=\"row\">\n                      <div className=\"container col-12\">\n                        <Button\n                          variant=\"contained\"\n                          style={{\n                            background:\n                              \"linear-gradient(45deg,   rgba(249, 188, 186, 1) 5%,rgba(192, 230, 224, 1) 52%)\",\n                            textAlign: \"center\",\n                            fontWeight: \"bold\",\n                            fontSize: \"10px\",\n                            color: \"black\",\n\n                            zIndex: \"1001\",\n                          }}\n                          type=\"submit\"\n                        >\n                          Start Pomodoro\n                        </Button>\n                      </div>\n                    </div>\n                  </CardActions>\n                </FormControl>\n              </form>\n            </CardContent>\n          </Card>\n          <Card\n            data-aos-duration=\"2000\"\n            data-aos={open ? \"flip-left\" : \"\"}\n            style={{\n              margin: \"0px\",\n              position: \"relative\",\n              border: \"10px solid #F5FFFA\",\n              boxShadow: \"5px 10px\",\n              borderRadius: \"0\",\n            }}\n          >\n            <CardActions>\n              <Button\n                style={{\n                  fontSize: \"large\",\n                }}\n                onClick={handleOpen}\n              >\n                <div className=\"how\">How It Works</div>\n              </Button>\n            </CardActions>\n          </Card>\n          <Card\n            data-aos-duration=\"2000\"\n            data-aos={open ? \"flip-left\" : \"\"}\n            style={{\n              margin: \"10px\",\n              position: \"relative\",\n              border: \"10px solid #F5FFFA\",\n              boxShadow: \"5px 10px\",\n              borderRadius: \"0\",\n            }}\n          >\n            <CardActions>\n              <p\n                className=\"text-muted\"\n                style={{\n                  marginTop: \"1px !important\",\n                  padding: \"0px !important\",\n                  fontSize: \"15px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Created By{\" \"}\n                <a href=\"https://github.com/kurtfatih\">@Fatih Kurt</a>\n              </p>\n              <div className=\"text-muted\">v/1.0</div>\n            </CardActions>\n          </Card>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"myauto text-center bgstart\">\n          <Card data-aos-duration=\"2000\" data-aos=\"flip-left\">\n            <CardContent>\n              <div className=\"row p-4 text-center\">\n                <div\n                  className=\"col-sm-12 pomodorosession\"\n                  style={{ maxWidth: 300, maxHeight: 500 }}\n                >\n                  <hr />\n                  <h3 className=\"display-3 \">1 SESSION</h3>\n                  <hr />\n\n                  <div className=\"row text-center\">\n                    <p style={{ color: \"green\" }}>WORK</p>\n                    <p>|</p>\n                    <p style={{ color: \"red\" }}>SHORT BREAK</p>\n                    <p>|</p>\n                    <p style={{ color: \"green\" }}>WORK</p>\n                    <p>|</p>\n                    <p style={{ color: \"red\", fontWeight: \"bold\" }}>\n                      LONG BREAK\n                    </p>\n                    <p>|</p> <p style={{ color: \"green\" }}>WORK</p>\n                    <p>|</p>\n                    <p style={{ color: \"red\" }}>SHORT BREAK</p>\n                    <p>|</p>\n                    <p style={{ color: \"green\" }}>WORK</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n            <CardActions>\n              <Button onClick={handleClose}>Go Back</Button>\n            </CardActions>\n          </Card>\n        </div>\n      );\n    }\n  };\n  useEffect(() => {\n    if (isnext) {\n      setCreateForm([]);\n    } else {\n      AOS.init();\n      setCreateForm([Createformfunction]);\n    }\n  }, [isnext, FrontSide]);\n\n  if (!isnext) {\n    return (\n      <React.Fragment>\n        {CreateForm.map((Element, index) => {\n          return (\n            <React.Fragment>\n              <Element key={index}></Element>\n            </React.Fragment>\n          );\n        })}\n      </React.Fragment>\n    );\n  } else if (isnext) {\n    return (\n      <React.Fragment>\n        {CreateTimer.map((Element, index) => {\n          return (\n            <Element key={index} dataofpomodoro={DataOfPomodoro}></Element>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default LineForm;\n",
    "import React from \"react\";\nimport LineForm from \"./forms\";\nconst LinePage = () => {\n  return (\n    <div>\n      <LineForm key=\"1\"></LineForm>\n    </div>\n  );\n};\nexport default LinePage;\n",
    "import React from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport LinePage from \"./Components/LinePage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          <Route key=\"1\" path=\"/\">\n            <LinePage key=\"1\"></LinePage>\n          </Route>\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}
